#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Contest Management System - http://cms-dev.github.io/
# Copyright © 2013-2014 Luca Wehrstedt <luca.wehrstedt@gmail.com>
# Copyright © 2016 Stefano Maggiolo <s.maggiolo@gmail.com>
# Copyright © 2018 Tobias Lenz <t_lenz94@web.de>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

"""Script to initialize the database schema used by CMS.

It will not check the current status of the DB and we therefore suggest
to run it only on an blank DB (we don't guarantee this script to be
idempotent).

"""

from __future__ import absolute_import
from __future__ import division
from __future__ import print_function
from __future__ import unicode_literals
from future.builtins.disabled import *
from future.builtins import *

# We enable monkey patching to make many libraries gevent-friendly
# (for instance, urllib3, used by requests)
import gevent.monkey
gevent.monkey.patch_all()

import argparse
import logging
import sys
import getpass

from cms import ConfigError
from cms.db import test_db_connection, init_db, Admin
from cmscontrib.AddAdmin import add_admin


logger = logging.getLogger(__name__)


def main():
    """Parse arguments and perform operation.

    """
    test_db_connection()

    parser = argparse.ArgumentParser(description=__doc__)
    args = parser.parse_args()

    success = init_db()
    if success is not True: return 1

    first = True

    while True:
        print(("Do you want to add {} admin account (alternatively you can use "
               "cmsAddAdmin)? [y/n] ").format("an" if first else "another"),
              end="")
        sys.stdout.flush()

        ans = sys.stdin.readline().strip().lower()

        if ans not in ["y", "yes"]:
            break

        print("Enter user name: ", end="")
        sys.stdout.flush()
        username = sys.stdin.readline().strip()

        print("Enter human readable name: ", end="")
        sys.stdout.flush()
        readable_name = sys.stdin.readline().strip()

        password = getpass.getpass("Enter password: ")
        repeated_password = getpass.getpass("Enter again: ")
        print("")

        if password == repeated_password:
            if add_admin(username, password, readable_name):
                first = False

        else:
            logger.error("Passwords don't agree.")
            sys.stdout.flush()

        print("")

    return 0 if success is True else 1


if __name__ == "__main__":
    try:
        sys.exit(main())
    except ConfigError as error:
        logger.critical(error)
        sys.exit(1)
